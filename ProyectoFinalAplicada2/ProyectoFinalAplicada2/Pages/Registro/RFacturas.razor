@page "/rFacturas"
@page "/rFacturas/{FacturaId:int}"

@inject IToastService toastService

	<EditForm Model="Factura" OnValidSubmit="Guardar">
		<DataAnnotationsValidator />

		<center>
			<h1> Registro de Factura </h1>
		</center>

		<form>
            <div class="form-row">

                <div class="col-sm-0     col-md-0     col-lg-0     col-xl-1" />

                <!--Factura Id-->
                <div class="form-group col-sm-5     col-md-5     col-lg-3     col-xl-3     ">
                    <label for="FacturaId " class="col-auto">Código</label>
                    <div class="input-group ">
                        <InputNumber @bind-Value="@Factura.FacturaId" class="form-control" />
                        <div class="input-group-append">
                            <button type="button" class="btn btn-primary" @onclick="Buscar"><span class="oi oi-magnifying-glass" />&nbsp;&nbsp;Buscar</button>
                        </div>
                    </div>
                </div>

                <div class="col-sm-2   col-md-2   col-lg-6  col-xl-4" />

                <!-- Fecha -->
                <div class="form-group col-sm-5     col-md-5     col-lg-3     col-xl-3     ">
                    <div class="form-group">
                        <label for="FechaIngreso" class="col-auto">Fecha</label>
                        <InputDate @bind-Value="@Factura.Fecha" class="form-control" disabled />
                    </div>
                </div>

                <div class="col-sm-0     col-md-0     col-lg-0     col-xl-1" />

                <div class="col-sm-0     col-md-0     col-lg-0     col-xl-1" />

                <!--Cliente-->
                <div class="form-group col-sm-6     col-md-6     col-lg-4     col-xl-4     ">
                    <label for="ClienteId">Cliente</label>
                    <InputSelect @bind-Value="@ClienteSelect" class="form-control" @onclick="CargarCliente">
                        <option value="0" disabled selected>Seleccione un Cliente</option>
                        @if (ListaCliente.Count == 0)
                        {
                            <option value="" disabled>No hay Cliente Registrado</option>
                        }
                        else
                        {
                            @foreach (var item in ListaCliente)
                            {
                                <option value="@item.ClienteId">@item.Nombres</option>
                            }
                        }
                    </InputSelect>
                </div>

                <div class="col-sm-6     col-md-6     col-lg-8     col-xl-7" />

                <div class="col-sm-0     col-md-0     col-lg-0     col-xl-1" />

                <!--Producto-->
                <div class="form-group col-sm-6     col-md-6     col-lg-4    col-xl-3     ">
                    <label for="Producto">Producto</label>
                    <InputSelect @bind-Value="@ProductoSelect" class="form-control" @onclick="CargarProducto" @onchange="CargarProducto">
                        <option value="0" disabled selected>Seleccione un Producto</option>
                        @if (ListaProducto.Count == 0)
                        {
                            <option value="" disabled>No hay Producto Registrado</option>
                        }
                        else
                        {
                            @foreach (var item in ListaProducto)
                            {
                                <option value="@item.ProductoId">@item.Descripcion</option>
                            }
                        }
                        </InputSelect>
                </div>

                <!--Cantidad-->
                <div class="form-group col-sm-6     col-md-6     col-lg-2    col-xl-2     ">
                    <label class="col-auto" for="Cantidad">Cantidad</label>
                    <InputNumber @bind-Value="@Cantidad" class="form-control" @onfocusin="CalcularImporte" @onfocusout="CalcularImporte" @onclick="CalcularImporte" />
                </div>

                <div class="col-sm-0     col-md-0     col-lg-0     col-xl-0" />

                <div class="form-row col-md-12 col-lg-6">
                    <!--Precio-->
                    <div class="form-group col-sm-6     col-md-6     col-lg-4    col-xl-4     ">
                        <label class="col-auto" for="precio">Precio</label>
                        <InputNumber @bind-Value="@Precio" class="form-control" disabled></InputNumber>
                    </div>

                    <!--Importe-->
                    <div class="form-group col-sm-6     col-md-6     col-lg-8    col-xl-6     ">
                        <label class="col-auto" for="importe">Importe</label>
                        <div class="input-group ">
                            <InputNumber @bind-Value="@Importe" class="form-control " disabled @onfocusin="CalcularImporte" @onfocusout="CalcularImporte" @onclick="CalcularImporte" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-success" @onclick="AgregarProducto"><span class="oi oi-plus" />&nbsp;Agregar</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-0     col-xl-1" />

                <div class="col-lg-12     col-xl-10 no-padding">

                    <div class="card">
                        <div class="card-body">
                            <table class="table">
                                <thead class="thead-light">
                                    <tr>
                                        <th>Codigo</th>
                                        <th>Descripcion</th>
                                        <th>Cantidad</th>
                                        <th>Precio</th>
                                        <th>Importe</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Factura.Detalle)
                                    {
                                        <tr>
                                            <th>@item.ProductoId</th>
                                            <th>@item.Descripcion</th>
                                            <th>@item.Cantidad</th>
                                            <th>@item.Precio</th>
                                            <th>@item.Importe</th>
                                            <th><button type="button" class="btn btn-outline-danger btn-sm" @onclick="(()=> EliminarProducto(item))">Eliminar</button></th>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <div class="form-inline justify-content-end">
                                <label>Total:&nbsp;</label>
                                <InputNumber @bind-Value="@Factura.Total" class="form-control" disabled />
                            </div>
                        </div>
                    </div>
                    <br />

                </div>
            </div>
</form>

		<div class="text-center">
			<button type="button" class="btn btn-warning BotonRegistro" @onclick="Limpiar"><span class="oi oi-file" />&nbsp;Limpiar</button>
			<button type="submit" class="btn btn-success BotonRegistro"><span class="oi oi-data-transfer-download"></span>&nbsp;Guardar</button>
			<button type="button" class="btn btn-danger BotonRegistro" data-toggle="modal" data-target="#exampleModal"><span class="oi oi-trash" />&nbsp;Eliminar</button>

			<!-- Modal-->
			<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
				<div class="modal-dialog" role="document">
					<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title">Confirmacion</h5>
							<button type="button" class="close" data-dismiss="modal" aria-label="Close">
								<span aria-hidden="true">&times;</span>
							</button>
						</div>
						<div class="modal-body">
							¿Está seguro de que desea eliminar esta Factura?
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-outline-secondary" data-dismiss="modal">¡No lo estoy!</button>
							<button type="button" data-dismiss="modal" class="btn btn-outline-danger" @onclick="Eliminar">¡Si lo estoy!</button>
						</div>
					</div>
				</div>
			</div>
			<!--fin de modal-->
		</div>

		<br />


	</EditForm>
@code {


    [Parameter]
    public int FacturaId { get; set; }

    public Facturas Factura { get; set; }

    ClientesController clientesController = new ClientesController();
    ProductosController productosController = new ProductosController();
    FacturaController controller = new FacturaController();
    private string ProductoSelect { get; set; }
    private string ClienteSelect { get; set; }

    private string mensaje = "";

    private int Cantidad = 0;
    private decimal Precio = 0;
    private int Importe = 0;

    private List<Productos> ListaProducto = new List<Productos>();
    private List<Clientes> ListaCliente = new List<Clientes>();

    private Clientes Cliente { get; set; }
    private Productos Producto { get; set; }

    protected override void OnInitialized()
    {
        ListaCliente = clientesController.GetList(e => true);
        ListaProducto = productosController.GetList(e => true);
        Factura = new Facturas();
        Cliente = new Clientes();
        Producto = new Productos();

        if (FacturaId != 0)
        {
            Factura.FacturaId = FacturaId;
            Buscar();
        }
    }

    private void CargarProducto()
    {
        try
        {
            Producto = productosController.Buscar(Convert.ToInt32(ProductoSelect));
            Precio = Producto.Precio;
        }
        catch (Exception ex)
        {
            //	mensaje = ex.ToString();
        }
    }

    private void CargarCliente()
    {
        try
        {
            Cliente = clientesController.Buscar(Convert.ToInt32(ClienteSelect));
        }
        catch (Exception ex)
        {
            //mensaje = ex.ToString();
        }
    }

    private bool ExisteProducto(int ProductoId)
    {
        bool paso = false;
        if (Factura.Detalle.Any(p => p.ProductoId == ProductoId))
            paso = true;

        return paso;
    }

    private void AgregarProducto()
    {
        if (ProductoSelect == null)
        {
            toastService.ShowInfo("Debe seleccionar un Producto", "Info");
        }
        else
        {
            if (ExisteProducto(Producto.ProductoId))
            {
                toastService.ShowError("Ya este producto esta agregado en la factura.", "Info");
            }
            else
            {
            if (Cantidad <= 0)
            {
                toastService.ShowInfo("La cantidad debe ser mayor a 0", "Info");
            }
            else
                if (Cantidad >= 999999)
            {
                toastService.ShowInfo("La cantidad esta fuera de rango", "Info");
                 return;
            }
            else
            {
                if (Cantidad > Producto.Cantidad)
                {
                    toastService.ShowInfo("Solo quedan " + Producto.Cantidad + " unidades de este producto", "Info");
                }
                else
                {
                    mensaje = "";
                    Factura.Detalle.Add(new FacturaDetalles()
                    {
                        FacturaId = Factura.FacturaId,
                        ProductoId = Producto.ProductoId,
                        Descripcion = Producto.Descripcion,
                        Cantidad = Cantidad,
                        Precio = Precio,
                        Importe = (Cantidad * Precio)
                    });
                    Producto = new Productos();

                    CalcularTotal();

                    ProductoSelect = "0";
                    Cantidad = 0;
                    }
                }
            }
        }
    }


    private void EliminarProducto(FacturaDetalles detalle)
    {
        Factura.Detalle.Remove(detalle);
        CalcularTotal();
    }

    public void Guardar()
    {
        mensaje = "";
        CalcularImporte();
        if (ClienteSelect == null)
        {
            toastService.ShowInfo("debe seleccionar un Cliente", "Info");
        }
        else
        {
            Factura.ClienteId = Convert.ToInt32(ClienteSelect);
            if (Factura.Detalle.Count == 0)
            {
                toastService.ShowInfo("Debes agregar un producto al detalle", "Info");
            }
            else
            {
                if (controller.Guardar(Factura))
                {
                    Limpiar();
                    toastService.ShowSuccess("Factura Guardada", "Exito");
                }
                else
                {
                    toastService.ShowError("Error al guardar Factura", "Fallo");
                }
            }
        }
    }

    public void Buscar()
    {
        var factura = controller.Buscar(Factura.FacturaId);

        if (factura != null)
        {
            Limpiar();
            Factura = factura;
            ClienteSelect = Convert.ToString(Factura.ClienteId);
            toastService.ShowSuccess("Factura encontrada.", "Exito");
        }
        else
        {
            Factura = new Facturas();
            toastService.ShowError("Factura no existe", "Fallo");
        }
    }

    public void Eliminar()
    {
        var factura = controller.Buscar(Factura.FacturaId);

        if (Factura != null)
        {
            controller.Eliminar(Factura.FacturaId);
            Limpiar();
            toastService.ShowSuccess("Factura eliminada correctamente.", "Exito");
        }
        else
        {
            toastService.ShowError("Error al eliminar esta Factura.", "Fallo");
        }
    }

    public void Limpiar()
    {
        mensaje = "";
        this.Factura = new Facturas();
        ClienteSelect = "0";
        ProductoSelect = "0";
        Precio = 0;
        Cantidad = 0;
        Importe = 0;
    }

    public void CalcularImporte()
    {
        if (Factura != null)
        {
            Importe = Convert.ToInt32(Precio) * Cantidad;
        }
        else
        {
            toastService.ShowError("Error al Calcular.", "Fallo");
        }
    }

    private void CalcularTotal()
    {
        decimal total = 0;

        foreach (var item in Factura.Detalle)
        {
            total += item.Importe;
        }

        Factura.Total = total;
    }
}