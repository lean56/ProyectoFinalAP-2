@page "/rPagos"
@page "/rPagos/{PagoId:int}"

@inject IToastService toastService

<EditForm Model="Pago" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <center>
        <h1>Registro de Pagos</h1>
    </center>

    <form>
        <div class="form-row">

            <div class="col-sm-2     col-md-3     col-lg-4     col-xl-4" />

            <!-- Pago Id-->
            <div class="form-group col-sm-8     col-md-6     col-lg-4     col-xl-4     ">
                <label for="PagoId" class="col-auto">Código</label>
                <div class="input-group ">
                    <InputNumber @bind-Value="@Pago.PagoId" class="form-control" />
                    <div class="input-group-append">
                        <button type="button" class="btn btn-primary" @onclick="Buscar"><span class="oi oi-magnifying-glass" />&nbsp;&nbsp;Buscar</button>
                    </div>
                </div>
            </div>

            <div class="col-sm-2     col-md-3     col-lg-4     col-xl-4" />

            <div class="col-sm-2     col-md-3     col-lg-4     col-xl-4" />

            <!-- Fecha -->
            <div class="form-group col-sm-8     col-md-6     col-lg-4     col-xl-4     ">
                <label for="Fecha">Fecha</label>
                <InputDate @bind-Value="@Pago.Fecha" class="form-control" />
            </div>

            <div class="col-sm-2     col-md-3     col-lg-4     col-xl-4" />

            <div class="col-sm-2     col-md-3     col-lg-4     col-xl-4" />

            <!-- Cliente -->
            <div class="form-group col-sm-8     col-md-6     col-lg-4     col-xl-4     ">
                <label for="ClienteId">Cliente</label>
                <InputSelect @bind-Value="@ClienteSeleccionado" class="form-control" @onclick="SeleccionarCliente" @onchange="SeleccionarCliente">
                    <option value="0" disabled selected>Seleccione un Cliente</option>
                    @foreach (var item in ListadoClientes)
                    {
                        <option value="@item.ClienteId">@item.Nombres</option>
                    }
                </InputSelect>
                <ValidationMessage For="(() => Pago.ClienteId)" />
            </div>

            <div class="col-sm-2     col-md-3     col-lg-4     col-xl-4" />

            <div class="col-sm-2     col-md-3     col-lg-4     col-xl-4" />

            <!-- Monto -->
            <div class="form-group col-sm-8     col-md-6     col-lg-4     col-xl-4     ">
                <label for="Monto">Monto</label>
                <InputNumber @bind-Value="@Pago.MontoPago" class="form-control" />
                <ValidationMessage For="(() => Pago.MontoPago)" />
                <p class="validation-message">@Mensaje</p>
            </div>

            <div class="col-sm-2     col-md-3     col-lg-4     col-xl-4" />
        </div>
    </form>

    <ValidationSummary />
    <!-- Botones-->
    <div class="text-center">
        <button type="button" class="btn btn-warning" @onclick="Limpiar"><span class="oi oi-file" style="color: white; text-decoration-color:white"/>&nbsp;Limpiar</button>
        <button type="submit" class="btn btn-success"><span class="oi oi-data-transfer-download"></span>&nbsp;Guardar</button>
        <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#exampleModal"><span class="oi oi-trash" />&nbsp;Eliminar</button>


        <!-- Modal-->
        <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Confirmacion</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        ¿Está seguro de que desea eliminar este Pago?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-secondary" data-dismiss="modal">¡No lo estoy!</button>
                        <button type="button" data-dismiss="modal" class="btn btn-outline-danger" @onclick="Eliminar">¡Si lo estoy!</button>
                    </div>
                </div>
            </div>
        </div>
        <!--fin de modal-->
    </div>

</EditForm>


@code {
    [Parameter]
    public int PagoId { get; set; }

    PagosController pagosController = new PagosController();
    Pagos Pago = new Pagos();

    ClientesController clientesController = new ClientesController();
    Clientes Cliente = new Clientes();
    List<Clientes> ListadoClientes = new List<Clientes>();
    string ClienteSeleccionado;

    string Mensaje;

    protected override void OnInitialized()
    {
        Pago = new Pagos();
        ListadoClientes = clientesController.GetList(e => true);
        Limpiar();

        if (PagoId != 0)
        {
            Pago.PagoId = PagoId;
            Buscar();
        }
    }

    private void SeleccionarCliente()
    {
        Pago.ClienteId = Convert.ToInt32(ClienteSeleccionado);
        Cliente = clientesController.Buscar(Convert.ToInt32(ClienteSeleccionado));
    }

    private void Guardar()
    {
        if (Pago.MontoPago > Cliente.Deuda)
        {
            Mensaje = "El pago es mayor a la Deuda, El Balance es: " + Cliente.Deuda;

        }
        else
        {
            if (pagosController.Guardar(Pago))
            {
                Limpiar();
                toastService.ShowSuccess("Pago guardado correctamente.", "Exito");

            }
            else
            {
                toastService.ShowError("Error al guardar el Pago.", "Fallo");

            }
        }

    }

    public void Buscar()
    {
        Pagos PagoTemporal = pagosController.Buscar(Pago.PagoId);

        if (PagoTemporal != null)
        {
            Limpiar();
            Pago = PagoTemporal;
            ClienteSeleccionado = Pago.ClienteId.ToString();
            toastService.ShowSuccess("Pago encontrado.", "Exito");

        }
        else
        {
            Limpiar();
            toastService.ShowError("El Pago no fue encontrado.", "Fallo");

        }
    }

    public void Eliminar()
    {
        Pagos PagoTemporal = pagosController.Buscar(Pago.PagoId);

        if (PagoTemporal != null)
        {
            if (pagosController.Eliminar(Pago.PagoId))
            {
                Limpiar();
                toastService.ShowSuccess("Pago eliminado correctamente.", "Exito");

            }
            else
            {
                toastService.ShowError("Error al eliminar el pago.", "Fallo");

            }
        }
        else
        {
            toastService.ShowError("Error al eliminar el pago.", "Fallo");

        }
    }

    private void Limpiar()
    {
        this.Pago = new Pagos();
        Mensaje = string.Empty;
        ClienteSeleccionado = "0";
    }

}
