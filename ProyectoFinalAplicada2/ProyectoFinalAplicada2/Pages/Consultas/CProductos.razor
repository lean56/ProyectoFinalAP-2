@using ProyectoFinalAplicada2.Models.ModelsForQueries

@page "/cProductos"

<EditForm Model="Listado">
	<center>
		<h1>Consulta de Productos</h1>
	</center>

	<form>
		<br />

		<div class="form-row">

			<div class="col-sm-0     col-md-0     col-lg-1     col-xl-2" />

			<!-- Filtro-->
			<div class="form-inline DivConsulta col-sm-12     col-md-6     col-lg-5     col-xl-4">
				<label for="Filtro" class="LabelConsulta     col-sm-3     col-md-2">Filtro: </label>
				<select class="form-control     col-sm-8     col-md-9" @bind="Filtro">
					<option value="0">Todo</option>
					<option value="1">Codigo</option>
					<option value="2">Descripcion</option>
					<option value="3">Categoria</option>
					<option value="4">Proveedor</option>
					<option value="5">Cantidad</option>
					<option value="6">Precio</option>
				</select>
			</div>

			<!-- Criterio -->
			<div class="form-inline DivConsulta col-sm-12     col-md-6     col-lg-5     col-xl-4">
				<label for="Criterio" class="LabelConsulta     col-sm-3      col-md-2">Criterio: </label>
				<InputText @bind-Value="@Criterio" class="form-control     col-sm-8     col-md-9" placeholder="Criterio" />
				<p class="validation-message"> @Mensaje </p>
			</div>

			<div class="col-sm-0     col-md-0     col-lg-1     col-xl-2" />

			<br />

			<!-- Filtrar por fecha -->
			<div class="DivConsulta text-center     col-12">
				<input class="ml-1" type="checkbox" @bind-value="BuscarPorFecha" style="margin-top:15px">&nbsp;&nbsp;Filtrar por Fecha
			</div>

			<div class="col-lg-1     col-xl-2" />

			<!-- Fecha desde-->
			<div class="form-inline DivConsulta    container     col-sm-5     col-md-5     col-lg-4          col-xl-3">
				<label for="Desde" class="LabelConsulta     col-sm-3     col-md-2">Desde: </label>
				<InputDate @bind-Value="@Desde" class="form-control     col-sm-8     col-md-9" />
			</div>

			<!-- Fecha Hasta-->
			<div class="form-inline DivConsulta     container     col-sm-5     col-md-5     col-lg-4     col-xl-3">
				<label for="Hasta" class="LabelConsulta     col-sm-3     col-md-2">Hasta: </label>
				<InputDate @bind-Value="@Hasta" class="form-control     col-sm-8     col-md-9" />
			</div>

			<!-- Boton Buscar-->
			<div class="DivConsulta text-center     container     col-sm-12     col-md-12          col-lg-2     col-xl-1">
				<button type="button" class="btn btn-primary" @onclick="Buscar">@*<span class="oi oi-magnifying-glass" />*@ Buscar</button>
			</div>

			<div class="col-sm-0     col-md-0     col-lg-1     col-xl-2" />

			<table class="table" style="margin-top: 20px">
				<thead class="thead-light">
					<tr>
						<th>Codigo</th>
						<th>Descripcion</th>
						<th>Fecha</th>
						<th>Categoria</th>
						<th>Proveedor</th>
						<th>Cantidad</th>
						<th>Precio</th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					@if (Listado.Count == 0)
					{
						<tr>
							<th colspan="12" style="color:black; text-align: center">"No hay datos que mostrar"</th>
						</tr>
					}
					else
					{

						@foreach (var item in Listado)
						{
				<tr>
					<th>@item.ProductoId</th>
					<th>@item.Descrpcion</th>
					<th>@item.FechaCreacion.ToString("dd/MM/yyyy")</th>
					<th>@item.Categoria</th>
					<th>@item.Proveedor</th>
					<th>@item.Cantidad</th>
					<th>@item.Precio</th>
					<th><a class="btn btn-sm btn-outline-primary" href="rProductos/@item.ProductoId">Ver</a></th>
				</tr>
						}
					}
				</tbody>
			</table>
		</div>
	</form>
</EditForm>

@code {
	string Filtro;
	string Criterio;
	DateTime Desde;
	DateTime Hasta;
	bool BuscarPorFecha;
	string Mensaje;

	CategoriasController categoriasController = new CategoriasController();
	Categorias Categoria = new Categorias();

	ProveedoresController proveedoresController = new ProveedoresController();
	Proveedores Proveedor = new Proveedores();

	ProductosController ProductoController = new ProductosController();
	public List<Productos> ListadoProductos = new List<Productos>();

	List<ProductosConsulta> Listado { get; set; }

	protected override void OnInitialized()
	{
		Filtro = "0";
		Criterio = string.Empty;
		Desde = DateTime.Now;
		Hasta = DateTime.Now;
		BuscarPorFecha = false;
		Mensaje = string.Empty;
		CargarLista();
	}

	private void CargarLista()
	{
		ListadoProductos = ProductoController.GetList(e => true);
		Listado = new List<ProductosConsulta>();
		foreach (var item in ListadoProductos)
		{
			ProductosConsulta p = new ProductosConsulta();
			p.ProductoId = item.ProductoId;
			p.Descrpcion = item.Descripcion;
			p.FechaCreacion = item.FechaCreacion;
			Categoria = categoriasController.Buscar(item.CategoriaId);
			p.Categoria = Categoria.Nombre;
			Proveedor = proveedoresController.Buscar(item.ProveedorId);
			p.Proveedor = Proveedor.Nombre;
			p.Precio = item.Precio;
			p.Cantidad = item.Cantidad;

			Listado.Add(p);
		}
	}

	private void Buscar()
	{
		if (Filtro == "0")
		{
			CargarLista();
		}
		else
		{
			if (Criterio == "")
			{
				Mensaje = "Agregue el criterio de busqueda.";
			}
			else
			{
				CargarLista();
				List<ProductosConsulta> ListadoTemporal = Listado;
				Mensaje = string.Empty;
				switch (Filtro)
				{
					case "0":
						ListadoProductos = ProductoController.GetList(e => true);
						break;

					case "1":
						ListadoTemporal = new List<ProductosConsulta>();
						foreach (var item in ListadoProductos)
						{
							if (Convert.ToString(item.ProductoId).Contains(Criterio))
							{
								ProductosConsulta p = new ProductosConsulta();
								p.ProductoId = item.ProductoId;
								p.Descrpcion = item.Descripcion;
								p.FechaCreacion = item.FechaCreacion;
								Categoria = categoriasController.Buscar(item.CategoriaId);
								p.Categoria = Categoria.Nombre;
								Proveedor = proveedoresController.Buscar(item.ProveedorId);
								p.Proveedor = Proveedor.Nombre;
								p.Precio = item.Precio;
								p.Cantidad = item.Cantidad;

								ListadoTemporal.Add(p);
							}
						}
						break;

					case "2":
						ListadoTemporal = new List<ProductosConsulta>();
						foreach (var item in ListadoProductos)
						{
							if (item.Descripcion.Contains(Criterio))
							{
								ProductosConsulta p = new ProductosConsulta();
								p.ProductoId = item.ProductoId;
								p.Descrpcion = item.Descripcion;
								p.FechaCreacion = item.FechaCreacion;
								Categoria = categoriasController.Buscar(item.CategoriaId);
								p.Categoria = Categoria.Nombre;
								Proveedor = proveedoresController.Buscar(item.ProveedorId);
								p.Proveedor = Proveedor.Nombre;
								p.Precio = item.Precio;
								p.Cantidad = item.Cantidad;

								ListadoTemporal.Add(p);
							}
						}
						break;

					case "3":
						ListadoTemporal = new List<ProductosConsulta>();
						foreach (var item in ListadoProductos)
                        {
                            Categoria = categoriasController.Buscar(item.CategoriaId);
                            if (Categoria.Nombre.Contains(Criterio))
                            {
								ProductosConsulta p = new ProductosConsulta();
								p.ProductoId = item.ProductoId;
								p.Descrpcion = item.Descripcion;
								p.FechaCreacion = item.FechaCreacion;
								p.Categoria = Categoria.Nombre;
								Proveedor = proveedoresController.Buscar(item.ProveedorId);
								p.Proveedor = Proveedor.Nombre;
								p.Precio = item.Precio;
								p.Cantidad = item.Cantidad;

								ListadoTemporal.Add(p);
                            }
                        }
						break;

					case "4":
						ListadoTemporal = new List<ProductosConsulta>();
						foreach (var item in ListadoProductos)
                        {
                            Proveedor = proveedoresController.Buscar(item.ProveedorId);
                            if (Proveedor.Nombre.Contains(Criterio))
                            {
								ProductosConsulta p = new ProductosConsulta();
								p.ProductoId = item.ProductoId;
								p.Descrpcion = item.Descripcion;
								p.FechaCreacion = item.FechaCreacion;
								Categoria = categoriasController.Buscar(item.CategoriaId);
								p.Categoria = Categoria.Nombre;
								p.Proveedor = Proveedor.Nombre;
								p.Precio = item.Precio;
								p.Cantidad = item.Cantidad;

								ListadoTemporal.Add(p);
                            }
                        }
						break;

					case "5":
						ListadoTemporal = new List<ProductosConsulta>();
						foreach (var item in ListadoProductos)
						{
							if (Convert.ToString(item.Cantidad).Contains(Criterio))
							{
								ProductosConsulta p = new ProductosConsulta();
								p.ProductoId = item.ProductoId;
								p.Descrpcion = item.Descripcion;
								p.FechaCreacion = item.FechaCreacion;
								Categoria = categoriasController.Buscar(item.CategoriaId);
								p.Categoria = Categoria.Nombre;
								Proveedor = proveedoresController.Buscar(item.ProveedorId);
								p.Proveedor = Proveedor.Nombre;
								p.Precio = item.Precio;
								p.Cantidad = item.Cantidad;

								ListadoTemporal.Add(p);
							}
						}
						break;

					case "6":
						ListadoTemporal = new List<ProductosConsulta>();
						foreach (var item in ListadoProductos)
						{
							if (Convert.ToString(item.Precio).Contains(Criterio))
							{
								ProductosConsulta p = new ProductosConsulta();
								p.ProductoId = item.ProductoId;
								p.Descrpcion = item.Descripcion;
								p.FechaCreacion = item.FechaCreacion;
								Categoria = categoriasController.Buscar(item.CategoriaId);
								p.Categoria = Categoria.Nombre;
								Proveedor = proveedoresController.Buscar(item.ProveedorId);
								p.Proveedor = Proveedor.Nombre;
								p.Precio = item.Precio;
								p.Cantidad = item.Cantidad;

								ListadoTemporal.Add(p);
							}
						}
						break;
				}
				if (BuscarPorFecha == true)
				{
					Listado = new List<ProductosConsulta>();
					foreach (var item in ListadoTemporal)
					{
						if (item.FechaCreacion.Date >= Desde.Date && item.FechaCreacion.Date <= Hasta.Date)
						{
							Listado.Add(item);
						}
					}
					BuscarPorFecha = false;
				}
				else
				{
					Listado = new List<ProductosConsulta>();
					Listado = ListadoTemporal;
				}
			}
		}
	}
}

