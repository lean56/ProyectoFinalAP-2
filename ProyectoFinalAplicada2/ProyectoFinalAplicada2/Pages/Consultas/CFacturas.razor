@using ProyectoFinalAplicada2.Models.ModelsForQueries

@page "/cFacturas"

	<EditForm Model="Listado">
		<center>
			<h1>Consulta de Facturas</h1>
		</center>

		<form>
			<br />

			<div class="form-row">

				<div class="col-sm-0     col-md-0     col-lg-1     col-xl-2" />

				<!-- Filtro-->
				<div class="form-inline DivConsulta col-sm-12     col-md-6     col-lg-5     col-xl-4">
					<label for="Filtro" class="LabelConsulta     col-sm-3     col-md-2">Filtro: </label>
					<select class="form-control     col-sm-8     col-md-9" @bind="Filtro">
						<option value="0">Todo</option>
						<option value="1">Codigo</option>
						<option value="2">Cliente</option>
						<option value="3">Total</option>
					</select>
				</div>

				<!-- Criterio -->
				<div class="form-inline DivConsulta col-sm-12     col-md-6     col-lg-5     col-xl-4">
					<label for="Criterio" class="LabelConsulta     col-sm-3      col-md-2">Criterio: </label>
					<InputText @bind-Value="@Criterio" class="form-control     col-sm-8     col-md-9" placeholder="Criterio" />
					<p class="validation-message"> @Mensaje </p>
				</div>

				<div class="col-sm-0     col-md-0     col-lg-1     col-xl-2" />

				<br />

				<!-- Filtrar por fecha -->
				<div class="DivConsulta text-center     col-12">
					<input class="ml-1" type="checkbox" @bind-value="BuscarPorFecha" style="margin-top:15px">&nbsp;&nbsp;Filtrar por Fecha
				</div>

				<div class="col-lg-1     col-xl-2" />

				<!-- Fecha desde-->
				<div class="form-inline DivConsulta    container     col-sm-5     col-md-5     col-lg-4          col-xl-3">
					<label for="Desde" class="LabelConsulta     col-sm-3     col-md-2">Desde: </label>
					<InputDate @bind-Value="@Desde" class="form-control     col-sm-8     col-md-9" />
				</div>

				<!-- Fecha Hasta-->
				<div class="form-inline DivConsulta     container     col-sm-5     col-md-5     col-lg-4     col-xl-3">
					<label for="Hasta" class="LabelConsulta     col-sm-3     col-md-2">Hasta: </label>
					<InputDate @bind-Value="@Hasta" class="form-control     col-sm-8     col-md-9" />
				</div>

				<!-- Boton Buscar-->
				<div class="DivConsulta text-center     container     col-sm-12     col-md-12          col-lg-2     col-xl-1">
					<button type="button" class="btn btn-primary" @onclick="Buscar">@*<span class="oi oi-magnifying-glass" />*@ Buscar</button>
				</div>

				<div class="col-sm-0     col-md-0     col-lg-1     col-xl-2" />

				<table class="table" style="margin-top: 20px">
					<thead class="thead-light">
						<tr>
							<th>Codigo</th>
							<th>Fecha</th>
							<th>Cliente</th>
							<th>Total</th>
							<th></th>
						</tr>
					</thead>
					<tbody>
						@if (Listado.Count == 0)
						{
							<tr>
								<th colspan="12" style="color:black; text-align: center">"No hay datos que mostrar"</th>
							</tr>
						}
						else
						{

							@foreach (var item in Listado)
							{
								<tr>
									<th>@item.FacturaId</th>
									<th>@item.Fecha.ToString("dd/MM/yyyy")</th>
									<th>@item.Cliente</th>
									<th>@item.Total</th>
									<th><a class="btn btn-sm btn-outline-primary" href="rFacturas/@item.FacturaId">Ver</a></th>
								</tr>
							}
						}
					</tbody>
				</table>
			</div>
		</form>
	</EditForm>

@code {
    string Filtro;
    string Criterio;
    DateTime Desde;
    DateTime Hasta;
    bool BuscarPorFecha;
    string Mensaje;

    ClientesController clientesController = new ClientesController();
    Clientes Cliente = new Clientes();

    FacturaController facturaController = new FacturaController();
    public List<Facturas> ListadoFacturas = new List<Facturas>();

    List<FacturasConsulta> Listado { get; set; }

    protected override void OnInitialized()
    {
        Filtro = "0";
        Criterio = string.Empty;
        Desde = DateTime.Now;
        Hasta = DateTime.Now;
        BuscarPorFecha = false;
        Mensaje = string.Empty;
        CargarLista();
    }

    private void CargarLista()
    {
        ListadoFacturas = facturaController.GetList(e => true);
        Listado = new List<FacturasConsulta>();
        foreach (var item in ListadoFacturas)
        {
            FacturasConsulta f = new FacturasConsulta();
            f.FacturaId = item.FacturaId;
            f.Fecha = item.Fecha;
            Cliente = clientesController.Buscar(item.ClienteId);
            f.Cliente = Cliente.Nombres;
            f.Total = item.Total;

            Listado.Add(f);
        }
    }

    private void Buscar()
    {
        if (Filtro == "0")
        {
            CargarLista();
        }
        else
        {
            if (Criterio == "")
            {
                Mensaje = "Agregue el criterio de busqueda.";
            }
            else
            {
                    CargarLista();
                    List<FacturasConsulta> ListadoTemporal = Listado;
                    Mensaje = string.Empty;
                    switch (Filtro)
                    {
                        case "0":
                            ListadoFacturas = facturaController.GetList(e => true);
                            break;

                        case "1":
                            ListadoTemporal = new List<FacturasConsulta>();
                            foreach (var item in ListadoFacturas)
                            {
                                if (Convert.ToString(item.FacturaId).Contains(Criterio))
                                {
                                    FacturasConsulta f = new FacturasConsulta();
                                    f.FacturaId = item.FacturaId;
                                    f.Fecha = item.Fecha;
                                    Cliente = clientesController.Buscar(item.ClienteId);
                                    f.Cliente = Cliente.Nombres;
                                    f.Total = item.Total;

                                    ListadoTemporal.Add(f);
                                }
                            }
                            break;

                        case "2":
                            ListadoTemporal = new List<FacturasConsulta>();
                            foreach (var item in ListadoFacturas)
                            {
                                Cliente = clientesController.Buscar(item.ClienteId);
                                if (Cliente.Nombres.Contains(Criterio))
                                {
                                    FacturasConsulta f = new FacturasConsulta();
                                    f.FacturaId = item.FacturaId;
                                    f.Fecha = item.Fecha;
                                    f.Cliente = Cliente.Nombres;
                                    f.Total = item.Total;

                                    ListadoTemporal.Add(f);
                                }
                            }
                            break;

                        case "3":
                            ListadoTemporal = new List<FacturasConsulta>();
                            foreach (var item in ListadoFacturas)
                            {
                                if (Convert.ToString(item.Total).Contains(Criterio))
                                {
                                    FacturasConsulta f = new FacturasConsulta();
                                    f.FacturaId = item.FacturaId;
                                    f.Fecha = item.Fecha;
                                    Cliente = clientesController.Buscar(item.ClienteId);
                                    f.Cliente = Cliente.Nombres;
                                    f.Total = item.Total;

                                    ListadoTemporal.Add(f);
                                }
                            }
                            break;
                    }
                    if (BuscarPorFecha == true && ListadoTemporal.Count > 0)
                    {
                        Listado = new List<FacturasConsulta>();
                        foreach (var item in ListadoTemporal)
                        {
                            if (item.Fecha.Date >= Desde.Date && item.Fecha.Date <= Hasta.Date)
                            {
                                Listado.Add(item);
                            }
                        }
                        BuscarPorFecha = false;
                    }
                    else
                    {
                        Listado = new List<FacturasConsulta>();
                        Listado = ListadoTemporal;
                    }
                }
        }
    }
}

